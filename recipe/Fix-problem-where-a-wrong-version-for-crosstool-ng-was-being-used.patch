Subject: [PATCH] Fix problem where a wrong version for crosstool-ng was being used

` ${CC} --version` returns `_gcc_version_info: x86_64-conda_cos6-linux-gnu-cc (crosstool-NG 1.24.0.123_1667d2b) 7.5.0`
VTKGenerateExportHeader tries to get the version using a regex, and it ends up getting "4.0.123" as the version.

Because of this, the build ultimately failed with messages like "undefined reference to `vtkDebugLeaksManager::~vtkDebugLeaksManager()'"
and "undefined reference to `vtkObjectFactoryRegistryCleanup::~vtkObjectFactoryRegistryCleanup()'"

For more information, check here: https://gitlab.kitware.com/vtk/vtk/-/issues/17775
---
--- a/CMake/VTKGenerateExportHeader.cmake
+++ b/CMake/VTKGenerateExportHeader.cmake
@@ -170,35 +170,15 @@ endmacro()
 
 macro(_vtk_test_compiler_hidden_visibility)
 
-  if(CMAKE_COMPILER_IS_GNUCXX)
-    execute_process(COMMAND ${CMAKE_C_COMPILER} --version
-      OUTPUT_VARIABLE _gcc_version_info
-      ERROR_VARIABLE _gcc_version_info)
-    string(REGEX MATCH "[3-9]\\.[0-9]\\.[0-9]*"
-      _gcc_version "${_gcc_version_info}")
-    # gcc on mac just reports: "gcc (GCC) 3.3 20030304 ..." without the
-    # patch level, handle this here:
-    if(NOT _gcc_version)
-      string(REGEX REPLACE ".*\\(GCC\\).*([34]\\.[0-9]).*" "\\1.0"
-        _gcc_version "${_gcc_version_info}")
-    endif()
 
-    if(_gcc_version VERSION_LESS "4.2")
-      set(GCC_TOO_OLD TRUE)
-    endif()
+  if(CMAKE_COMPILER_IS_GNUCXX AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS "4.2")
+    set(GCC_TOO_OLD TRUE)
+  elseif(CMAKE_COMPILER_IS_GNUCC AND CMAKE_C_COMPILER_VERSION VERSION_LESS "4.2")
+    set(GCC_TOO_OLD TRUE)
+  elseif(CMAKE_CXX_COMPILER_ID MATCHES Intel AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS "12.0")
+    set(_INTEL_TOO_OLD TRUE)
   endif()
 
-  if(CMAKE_CXX_COMPILER_ID MATCHES "Intel")
-    execute_process(COMMAND ${CMAKE_CXX_COMPILER} -V
-      OUTPUT_VARIABLE _intel_version_info
-      ERROR_VARIABLE _intel_version_info)
-    string(REGEX REPLACE ".*Version ([0-9]+(\\.[0-9]+)+).*" "\\1"
-      _intel_version "${_intel_version_info}")
-
-    if(_intel_version VERSION_LESS "12.0")
-      set(_INTEL_TOO_OLD TRUE)
-    endif()
-  endif()
 
 
   # Exclude XL here because it misinterprets -fvisibility=hidden even though
-- 
2.23.0.windows.1

