{% set version = "9.4.2" %}
{% set build = 0 %}

{% set minor_version = ".".join(version.split(".")[:2]) %}

package:
  name: vtk
  version: {{ version }}

source:
  url: http://www.vtk.org/files/release/{{ minor_version }}/VTK-{{ version }}.tar.gz
  sha256: 36c98e0da96bb12a30fe53708097aa9492e7b66d5c3b366e1c8dc251e2856a02
  patches:
    - patches/fix-threads-windows.patch  # [win]
    # https://github.com/conda-forge/vtk-feedstock/pull/282
    # https://gitlab.kitware.com/vtk/vtk/-/issues/18365#note_1079278
    # https://gitlab.kitware.com/vtk/vtk/-/merge_requests/9987
    - patches/9987_try_except_python_import.patch  # [not win]
    # https://gitlab.kitware.com/vtk/vtk/-/merge_requests/11929
    - patches/11929_disable_class_overrides_pyi.patch

build:
  number: {{ build }}

outputs:
  - name: vtk-base
    build:
      script:
        - ${RECIPE_DIR}/build-base.sh  # [not win]
        - "%RECIPE_DIR%\\bld-base.bat"  # [win]
      ignore_run_exports:
        - ffmpeg  # [not win]
        # Found via inspection of the conda-forge logs, hopefully okay to ignore:
        - xorg-libxext  # [linux]
        - xorg-libxxf86vm  # [linux]
        - xorg-libxft  # [linux]
        - xorg-libxt  # [linux]
        - xorg-libxmu  # [linux]
        - libxcb  # [linux]
        - libglvd  # [linux]
        - libuuid  # [linux]
        - xorg-libxv  # [linux]
        - libgl  # [linux]
        - xorg-libxpm  # [linux]
        - libegl  # [linux]
        - xorg-libxinerama  # [linux]
      run_exports:
        - {{ pin_subpackage('vtk-base', max_pin='x.x.x') }}

    requirements:
      build:
        - {{ compiler("cxx") }}
        - {{ stdlib("c") }}
        - cmake
        - ninja
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
        - qt6-main                               # [build_platform != target_platform]
      host:
        - python
        - zlib
        - liblzma-devel
        - freetype
        - hdf5
        - hdf5 * nompi_*
        - libxml2
        - libpng
        - libjpeg-turbo
        - libtiff
        - jsoncpp
        - expat
        - tbb
        - tbb-devel
        - libnetcdf
        - libnetcdf * nompi_*
        - lz4-c
        # TODO: Someday we should add Vulkan once it can be found in conda-forge
        # These packages are not CDT to help with compat with other builds
        # (e.g., tensorflow, qt-main), e.g.
        # https://github.com/conda-forge/qt-main-feedstock/blob/2b166b35e9e1a2d897640ac28ae4b00491d9e310/recipe/meta.yaml#L134-L138
        - libgl-devel  # [linux]
        - libegl-devel  # [linux]
        - libglvnd-devel  # [linux]
        - libglx-devel  # [linux]
        - libglu  # [linux]
        - libxcb  # [linux]
        - libxkbfile  # [linux]
        - libuuid  # [linux]
        # still missing: Xaccessrules Xxf86misc, xcb_errors, xcb_xrm
        - xorg-xproto  # [linux]
        - xorg-libxcursor  # [linux]
        - xorg-libxft  # [linux]
        - xorg-libxt  # [linux]
        - xorg-libxv  # [linux]
        - xorg-libxext  # [linux]
        - xorg-libxres  # [linux]
        - xorg-libxaw  # [linux]
        - xorg-libxinerama  # [linux]
        - xorg-libxpm  # [linux]
        - xorg-libxmu  # [linux]
        - xorg-libxxf86vm  # [linux]
        - xorg-libx11  # [linux]
        - xorg-xf86vidmodeproto  # [linux]
        - libboost-headers
        - ffmpeg
        - utfcpp
        - eigen
        - double-conversion
        - pugixml
        - glad2-cmake
        - glad2
        - libogg
        - libtheora
        - nlohmann_json
        - proj
        - sqlite
        # Until this is solved:
        # https://gitlab.kitware.com/vtk/vtk/-/issues/19561
        # we use the internal one in build-base.sh
        - gl2ps  # [not osx]
        - qt6-main  # [not ppc64le]
      run:
        - python
        - utfcpp
        - nlohmann_json
        - loguru
        - numpy
        - wslink
        - matplotlib-base >=2.0.0

      run_constrained:
        # Paraview bundles its own VTK that has conflicting Python vtkmodules
        - paraview ==9999999999
        - {{ pin_compatible('libboost_headers', max_pin='x.x') }}

    test:
      imports:
        - vtk
        - vtk.vtkChartsCore
        - vtk.vtkCommonCore
        - vtk.vtkFiltersCore
        - vtk.vtkFiltersGeneric
        - vtk.vtkGeovisCore
        - vtk.vtkFiltersHybrid
        - vtk.vtkIOCore
        - vtk.vtkImagingCore
        - vtk.vtkInfovisCore
        - vtk.vtkRenderingCore
        - vtk.vtkViewsCore
        - vtk.vtkRenderingVolume
        - vtk.vtkInteractionWidgets
        - vtk.vtkWebGLExporter
        - vtkmodules
        - vtkmodules.qt.QVTKRenderWindowInteractor  # [not ppc64le]
        - vtkmodules.tk.vtkTkRenderWidget  # [not win]
        - vtkmodules.vtkChartsCore
        - vtkmodules.vtkCommonCore
        - vtkmodules.vtkFiltersCore
        - vtkmodules.vtkFiltersGeneric
        - vtkmodules.vtkGeovisCore
        - vtkmodules.vtkFiltersHybrid
        - vtkmodules.vtkIOCore
        - vtkmodules.vtkImagingCore
        - vtkmodules.vtkInfovisCore
        - vtkmodules.vtkRenderingCore
        - vtkmodules.vtkRenderingMatplotlib
        - vtkmodules.vtkViewsCore
        - vtkmodules.vtkRenderingQt
        - vtkmodules.vtkRenderingVolume
        - vtkmodules.vtkInteractionWidgets
        - vtkmodules.vtkWebCore
        - vtkmodules.web
        - vtkmodules.web.utils

      requires:
        - pip
        - setuptools
        - pyside6  # [not ppc64le]

      commands:
        - pip check
        - test $(pip list | grep vtk | tr -s " " | grep $PKG_VERSION | wc -l) -eq 1  # [unix]
        - pip list | findstr "vtk"  # [win]
        # Ideally here we would do:
        # {% for vtk_lib in ["vtkGUISupportQt", "vtkRenderingQt"] %}
        # ...
        # {% endfor %}
        # But it breaks the linter :( so we do it manually
        - test -f $PREFIX/lib/libvtkGUISupportQt-{{ minor_version }}${SHLIB_EXT}  # [not win]
        - if not exist %PREFIX%\\Library\\lib\\vtkGUISupportQt-{{ minor_version }}.lib exit 1  # [win]
        - if not exist %PREFIX%\\Library\\bin\\vtkGUISupportQt-{{ minor_version }}.dll exit 1  # [win]
        - test -f $PREFIX/lib/libvtkRenderingQt-{{ minor_version }}${SHLIB_EXT}  # [not win]
        - if not exist %PREFIX%\\Library\\lib\\vtkRenderingQt-{{ minor_version }}.lib exit 1  # [win]
        - if not exist %PREFIX%\\Library\\bin\\vtkRenderingQt-{{ minor_version }}.dll exit 1  # [win]

  - name: vtk-io-ffmpeg
    build:
      script:
        - ${RECIPE_DIR}/build-io-ffmpeg.sh  # [not win]
        - exit 1  # [win]
      skip: true  # [win]
      run_exports:
        - {{ pin_subpackage('vtk-io-ffmpeg', max_pin='x.x.x') }}
    requirements:
      build: []
      host:
        # We use python and ffmpeg here in the host section so that conda build
        # uses the global pinnings and ensures compatibility, as both ffmpeg and python
        # are dependency of the package
        - python
        - ffmpeg
      run:
        - {{ pin_subpackage("vtk-base", exact=True) }}
        - ffmpeg
    test:
      requires:
        - pip
        - setuptools
      imports:
        - vtk.vtkIOFFMPEG

  - name: vtk
    build:
      run_exports:
        - {{ pin_subpackage('vtk-base', max_pin='x.x.x') }}
    requirements:
      build: []
      host:
        - python
      run:
        # The pin_subpackage is not exact to avoid issues like https://github.com/conda-forge/vtk-feedstock/issues/347
        # and https://github.com/conda-forge/vtk-feedstock/issues/372
        - {{ pin_subpackage("vtk-base", max_pin='x.x.x') }}
        - {{ pin_subpackage("vtk-io-ffmpeg", max_pin='x.x.x') }}  # [not win]
    test:
      requires:
        - pip
        - setuptools
      imports:
        - vtk
        - vtk.vtkIOFFMPEG  # [not win]
      commands:
        - python test_vtk.py

about:
  home: http://www.vtk.org/
  license: BSD-3-Clause
  license_file:
    - Copyright.txt
    - vendored-fast_float-license.txt  # https://gitlab.kitware.com/vtk/vtk/-/blob/master/ThirdParty/fast_float/vtkfast_float/LICENSE-MIT
    - vendored-libharu-license.txt  # https://gitlab.kitware.com/vtk/vtk/-/blob/master/ThirdParty/libharu/vtklibharu/LICENSE
    - vendored-loguru-license.txt  # https://gitlab.kitware.com/vtk/vtk/-/blob/v9.4.1/ThirdParty/loguru/vtkloguru/LICENSE
    - vendored-pegtl-license.txt  # https://gitlab.kitware.com/vtk/vtk/-/blob/master/ThirdParty/pegtl/vtkpegtl/LICENSE
    - vendored-exprtk-license.txt  # https://github.com/conda-forge/exprtk-feedstock/blob/main/license.txt
    - vendored-fmt-license.txt  # https://gitlab.kitware.com/vtk/vtk/-/blob/master/ThirdParty/fmt/vtkfmt/LICENSE.rst
    - vendored-cgns-license.txt  # https://gitlab.kitware.com/vtk/vtk/-/blob/master/ThirdParty/cgns/vtkcgns/license.txt
    - vendored-ioss-license.txt  # https://gitlab.kitware.com/vtk/vtk/-/blob/master/ThirdParty/ioss/vtkioss/COPYRIGHT
    - vendored-token-license.txt  # https://gitlab.kitware.com/vtk/vtk/-/blob/master/ThirdParty/token/vtktoken/license.md
    - vendored-verdict-license.txt  # https://gitlab.kitware.com/vtk/vtk/-/blob/master/ThirdParty/verdict/vtkverdict/LICENSE
  summary: >
    The Visualization Toolkit (VTK) is an open-source, freely available software system for 3D computer graphics, modeling, image processing, volume rendering, scientific visualization, and information visualization.
  dev_url: https://gitlab.kitware.com/vtk/vtk
  doc_url: https://vtk.org/documentation

extra:
  recipe-maintainers:
    - Maxyme
    - ccordoba12
    - grlee77
    - msarahan
    - patricksnape
    - dfroger
    - tadeu
    - marcelotrevisani
    - downiec
    - jasonb5
    - matthiasdiener
    - basnijholt
    - Tobias-Fischer
