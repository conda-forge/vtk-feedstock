{% set version = "9.1.0" %}
{% set build = 4 %}

{% set minor_version = ".".join(version.split(".")[:2]) %}

{% set build = build + 100 %}   # [build_variant == "osmesa"]
{% set build = build + 200 %}   # [build_variant == "qt"]

package:
  name: vtk
  version: {{ version }}

source:
  url: http://www.vtk.org/files/release/{{ minor_version }}/VTK-{{ version }}.tar.gz
  sha256: 8fed42f4f8f1eb8083107b68eaa9ad71da07110161a3116ad807f43e5ca5ce96

build:
  number: {{ build }}
  run_exports:
    - {{ pin_subpackage('vtk', max_pin='x.x.x') }}

  # typically, osmesa is selected by installing or not installing
  # mesalib, but it could also be selected via the build string:
  # `vtk * osmesa*` for osmesa
  # `vtk * egl*` for egl
  # `vtk * qt*` for qt

  string: {{ build_variant }}_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ build }}

  track_features:
    - vtk-egl  # [build_variant == "egl"]
    - vtk-osmesa  # [build_variant == "osmesa"]

  features:
    - mesalib  # [build_variant == "osmesa"]

requirements:
  build:
    - {{ compiler("cxx") }}
    - {{ compiler('fortran') }}  # [build_variant != "qt"]
    - sysroot_linux-64 2.17  # [build_variant == "osmesa"]
    - cmake
    - ninja
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - {{ cdt('libxcb') }}  # [linux and build_variant != "osmesa"]
    - {{ cdt('libxau') }}  # [linux and build_variant != "osmesa"]
    - {{ cdt('libuuid') }}  # [linux and build_variant != "osmesa"]
    - {{ cdt('libxext') }}  # [linux and build_variant != "osmesa"]
    - {{ cdt('libxfixes') }}  # [linux and build_variant != "osmesa"]
    - {{ cdt('libxxf86vm') }}  # [linux and build_variant != "osmesa"]
    - {{ cdt('libxdamage') }}  # [linux and build_variant != "osmesa"]
    - {{ cdt('libselinux') }}  # [linux and build_variant != "osmesa"]
    - {{ cdt('libsm-devel') }}  # [linux and build_variant != "osmesa"]
    - {{ cdt('libice-devel') }}  # [linux and build_variant != "osmesa"]
    - {{ cdt('libx11-devel') }}  # [linux and build_variant != "osmesa"]
    - {{ cdt('mesa-libgl-devel') }}  # [linux and build_variant != "osmesa"]
    - {{ cdt('mesa-dri-drivers') }}  # [linux and build_variant != "osmesa"]
    - {{ cdt('xorg-x11-proto-devel') }}  # [linux and build_variant != "osmesa"]
    - {{ cdt('mesa-libegl-devel') }}  # [build_variant == "egl"]
    - {{ cdt('mesa-libgbm') }}  # [build_variant == "egl"]

  host:
    - python
    - zlib
    - freetype
    - hdf5
    - hdf5 * nompi_*
    - libxml2
    - libpng
    - jpeg
    - libtiff
    - jsoncpp
    - expat
    - tbb
    - tbb-devel
    - mesalib >=21.0  # [build_variant == "osmesa"]
    - libnetcdf
    - libnetcdf * nompi_*
    - lz4-c
    - xorg-libxt  # [linux]
    - boost-cpp
    - tk  # [not win and (build_variant == "qt")]
    - ffmpeg
    - utfcpp
    - eigen
    - double-conversion
    - pugixml
    - glew  # [build_variant == "qt"]
    - libogg
    - libtheora
    - proj
    - loguru
    - sqlite
    - gl2ps
    - pugixml
    - qt  # [not ppc64le and not arm64 and (build_variant == "qt")]

  run:
    - python
    - zlib
    - freetype
    - hdf5
    - libxml2
    - libpng
    - jpeg
    - libtiff
    - jsoncpp
    - expat
    - tbb
    - mesalib >=21.0  # [build_variant == "osmesa"]
    - libnetcdf
    - lz4-c
    - xorg-libxt  # [linux]
    - tk  # [not win and (build_variant == "qt")]
    - ffmpeg
    - utfcpp
    - eigen
    - double-conversion
    - pugixml
    - glew  # [build_variant == "qt"]
    - libogg
    - libtheora
    - proj
    - loguru
    - sqlite
    - gl2ps
    - pugixml
    - tbb-devel

  run_constrained:
    # Paraview bundles its own VTK that has conflicting Python vtkmodules
    - paraview ==9999999999

test:
  imports:
    - vtk
    - vtk.vtkChartsCore
    - vtk.vtkCommonCore
    - vtk.vtkFiltersCore
    - vtk.vtkFiltersGeneric
    - vtk.vtkGeovisCore
    - vtk.vtkFiltersHybrid
    - vtk.vtkIOCore
    - vtk.vtkImagingCore
    - vtk.vtkInfovisCore
    - vtk.vtkRenderingCore
    - vtk.vtkViewsCore
    - vtk.vtkRenderingVolume
    - vtk.vtkInteractionWidgets
    - vtk.vtkWebGLExporter
    - vtk.tk.vtkTkRenderWidget  # [not win and (build_variant == "qt")]
    - vtkmodules
    - vtkmodules.vtkChartsCore
    - vtkmodules.vtkCommonCore
    - vtkmodules.vtkFiltersCore
    - vtkmodules.vtkFiltersGeneric
    - vtkmodules.vtkGeovisCore
    - vtkmodules.vtkFiltersHybrid
    - vtkmodules.vtkIOCore
    - vtkmodules.vtkImagingCore
    - vtkmodules.vtkInfovisCore
    - vtkmodules.vtkRenderingCore
    - vtkmodules.vtkViewsCore
    - vtkmodules.vtkRenderingVolume
    - vtkmodules.vtkInteractionWidgets

  requires:
    - setuptools

about:
  home: http://www.vtk.org/
  license: BSD-3-Clause
  license_file: Copyright.txt
  summary: >
    The Visualization Toolkit (VTK) is an open-source, freely available software system for 3D computer graphics, modeling, image processing, volume rendering, scientific visualization, and information visualization.
  dev_url: https://gitlab.kitware.com/vtk/vtk
  doc_url: https://vtk.org/documentation

extra:
  recipe-maintainers:
    - Maxyme
    - ccordoba12
    - grlee77
    - msarahan
    - patricksnape
    - dfroger
    - tadeu
    - marcelotrevisani
    - muryanto1
    - downiec
    - jasonb5
    - matthiasdiener
    - basnijholt
